# docker-compose.yml
version: '2.2'

services:
  cache:
    image: memcached
  craft:
    build: ./
    depends_on:
      - postgres
    volumes:
      - ./api:/var/www/html
    environment:
      CRAFT_ENVIRONMENT: dev
      SECURITY_KEY: 6SkOBU85-5lFdRleCkckUCqquBq6mBIS
      DB_DSN: pgsql:host=postgres;dbname=craft
      DB_SERVER: postgres
      DB_NAME: craft
      DB_USER: craft
      DB_PASSWORD: rootroot
      DB_DATABASE: craft
      DB_SCHEMA: public
      DB_DRIVER: pgsql
      DB_PORT: 5432
      PRIMARY_SITE_URL: http://localhost:8080
      WEB_BASE_URL: http://localhost:3000
      ALIAS_PREVIEW_URL_FORMAT: http://localhost:3000/api/preview?site={site}&entryUid={sourceUid}
      ENABLE_MEMCACHED: "true"
      MEMCACHED_IP: cache
      MEMCACHED_PORT: 11211
      PORT: 8080
      NEXT_API_BASE_URL: gateway.docker.internal:3000/api
      NEXT_REVALIDATE_SECRET_TOKEN: super-secret-token
      VERIFY_EMAIL_PATH: http://localhost:3000/?activate=true
      SET_PASSWORD_PATH: http://localhost:3000/?set_password=true
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    build: ./db
    environment:
      POSTGRES_ROOT_PASSWORD: root
      POSTGRES_USER: craft
      POSTGRES_PASSWORD: rootroot
      POSTGRES_DB: craft
    volumes:
      # Persistent data
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "export PGPASSWORD=$${POSTGRES_PASSWORD}; pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

volumes:
  pgdata:
